{"version":3,"sources":["config/ParticlesJS.js","components/Navigation/Navigation.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","index.js","assets/images/brain.svg","assets/images/loading.svg"],"names":["particlesOption","particles","number","value","density","enable","value_area","interactivity","detect_on","events","onhover","mode","Navigation","route","changeRoute","className","src","brain","height","alt","onClick","ImageLinkForm","onInputChange","onSubmit","type","placeholder","onChange","Rank","FaceRecognition","inputUrl","boxes","loading","errFetch","key","listBoxes","map","box","style","top","topRow","bottom","bottomRow","left","leftCol","right","rightCol","options","max","width","loadingImage","id","SignIn","required","autoFocus","name","Register","app","Clarifai","App","apiKey","props","calculateFaceLocation","data","clarifaiFace","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","getArrayOfBoxs","address","outputs","regions","array","i","length","positions","region_info","bounding_box","push","displayFaceBox","setState","event","input","target","reviewErrFetch","isLoading","status","cleanBoundingBox","boolean","boundingBox","querySelectorAll","display","imageUrl","state","models","predict","then","response","catch","err","console","log","querySelector","string","this","params","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.8c1d6127.chunk.js","sourcesContent":["const particlesOption = {\r\n  particles: {\r\n    number:{ \r\n      value: 30,\r\n      density: {\r\n        enable: true,\r\n        value_area:600\r\n      }\r\n    }    \r\n  },\r\n  interactivity:{\r\n    detect_on:'canvas',\r\n    events:{\r\n      onhover:{\r\n        enable:true,\r\n        mode:'repulse'\r\n      }\r\n    }}\r\n};\r\n\r\nexport default particlesOption;","import React from 'react';\r\nimport brain from '../../assets/images/brain.svg';\r\nimport './Navigation.css';\r\n\r\nconst Navigation  = ({route, changeRoute}) => {\r\n  return (\r\n    <header>\r\n      <div className=\"logoBox\">\r\n        <img src={brain} height='40px' alt='logo'/>\r\n        <p>SmartBrain</p>\r\n      </div>\r\n      <nav>\r\n        {\r\n          route === 'logged' &&\r\n          <p onClick={()=> changeRoute('signin')}>Sign out</p>\r\n        }\r\n        {\r\n          route === 'signin' &&\r\n          <p onClick={()=> changeRoute('register')}>Register</p>\r\n        }\r\n        {\r\n          route === 'register' &&\r\n          <p onClick={()=> changeRoute('signin')}>Sign in</p>\r\n        }\r\n        \r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({ onInputChange, onSubmit }) => {\r\n  return (\r\n    <div className='imageLinkForm margin-lad'>\r\n      <p>\r\n        {`This Magic Brain will detect faces in your pictures. Git it a try!`}\r\n      </p>\r\n      <div className='formBox'>\r\n        <input\r\n          className='formInput'\r\n          type='text'\r\n          placeholder='Insert the link of your image'\r\n          onChange={onInputChange}\r\n         />\r\n         <button className='formButton' onClick={onSubmit} >Detect</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './Rank.css'\r\n \r\n\r\nconst Rank = () => {\r\n  const user = 'Gast√≥n';\r\n  const value = 5;\r\n  return (\r\n    <div className='textBox'>\r\n      <div className='userText'>\r\n        <p>\r\n          <span>{user}</span>, your current rank is .. <span>#{value}!</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Rank;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport loadingImage from '../../assets/images/loading.svg'\r\n\r\nimport './FaceRecognition.css';\r\n\r\n\r\n// This part has been updated with the recent Clarifai changes. Used to be:\r\n// .predict(Clarifai.FACE_DETECT_MODEL, req.body.input)\r\n// app.models.predict('c0c0ac362b03416da06ab3fa36fb58e3', this.state.input)\r\n\r\n\r\nconst FaceRecognition = ({ inputUrl, boxes , loading, errFetch }) => {\r\n\r\n  let key = 0;\r\n  const listBoxes = \r\n    boxes.map(box => <div key={key++} className=\"bounding-box\" style={{top:box.topRow, bottom:box.bottomRow, left:box.leftCol, right: box.rightCol}}></div>)\r\n\r\n  return (\r\n    <div >\r\n      \r\n         <Tilt className=\"Tilt tilt-img\"  options={{ max : 5 }} style={{ width: '85%' }} >\r\n          <div className=\"Tilt-inner\"> \r\n            <div className=\"imgBox \">\r\n              {\r\n                loading && \r\n                <div className='loadingBox'>\r\n                  <img className='loadingSvg' width='100px' src={loadingImage} alt='loading' />\r\n                </div>\r\n              }\r\n              {\r\n                errFetch ? (<h2 className='textError'>The URL is wrong.. Try again!</h2>) :\r\n                  \r\n                (\r\n                  <div>\r\n                  <img id=\"inputImg\" className='img' src={inputUrl} alt=''/>\r\n                  \r\n                  {listBoxes}\r\n                  \r\n                  </div>\r\n                )\r\n              }\r\n            </div>\r\n          </div>\r\n        </Tilt>\r\n       \r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\nimport './SignIn.css'\r\n\r\nfunction SignIn({changeRoute}){\r\n\r\n  return (\r\n    <div className='loggin'>\r\n      <div className='logginBox'>\r\n        <h2>Sign in</h2>\r\n        <input \r\n          placeholder='Username'\r\n          type='text'\r\n          required\r\n          autoFocus\r\n          id='logginSignUsername'\r\n          name='logginSignUsername'\r\n        />\r\n        <input \r\n          placeholder='Password'\r\n          type='password'\r\n          required\r\n          id='logginSignPassword'\r\n          name='logginSignPassword'\r\n        />\r\n        <button onClick={() => changeRoute('logged')}>Sign in</button>\r\n        <p className='logginRegister' onClick={()=> changeRoute('register')}>Register</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nfunction Register({changeRoute}){\r\n\r\n  return (\r\n    <div className='loggin'>\r\n      <div className='logginBox'>\r\n        <h2>Register</h2>\r\n        <input \r\n          placeholder='Name'\r\n          type='text'\r\n          required\r\n          autoFocus\r\n          id='logginRegisterName'\r\n          name='logginRegisterName'\r\n        />\r\n        <input \r\n          placeholder='Username'\r\n          type='text'\r\n          required\r\n          autoFocus\r\n          id='logginRegisterUsername'\r\n          name='logginRegisterUsername'\r\n        />\r\n        <input \r\n          placeholder='E-mail'\r\n          type='email'\r\n          required\r\n          autoFocus\r\n          id='logginRegisterEmail'\r\n          name='logginRegisterEmail'\r\n        />\r\n        <input \r\n          placeholder='Password'\r\n          type='password'\r\n          required\r\n          id='logginRegisterPassword'\r\n          name='logginRegisterPassword'\r\n        />\r\n        <input \r\n          placeholder='Password again'\r\n          type='password'\r\n          required\r\n          id='logginRegisterPasswordAgain'\r\n          name='logginRegisterPasswordAgain'\r\n        />\r\n        <button onClick={() => changeRoute('logged')}>Register</button>\r\n        <p className='logginRegister' onClick={()=> changeRoute('signin')}>Sign in</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register;","import React from 'react';\nimport './App.css';\nimport particlesOption from './config/ParticlesJS'\nimport Navigation from './components/Navigation/Navigation';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register'\n\nconst app = new Clarifai.App({\n apiKey: '946131969c6c4d0388f1216e9b25374f'\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      imageUrl: '',\n      loading: false,\n      boxes: [],\n      route: 'signin',\n      errFetch: false\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace= data;\n    const image = document.getElementById('inputImg');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  getArrayOfBoxs = (data) => {\n    const address = data.outputs[0].data.regions;\n    const array = [];\n    for (let i = 0; i < address.length; i++){\n        let positions = address[i].region_info.bounding_box;\n        array.push(this.calculateFaceLocation(positions))\n    }\n    return array;\n  }\n\n  displayFaceBox = (boxes) => { \n    this.setState({boxes});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n\n  reviewErrFetch = (value) => {\n    this.setState({errFetch: value})\n  }\n\n  isLoading = (status) => {\n    this.setState({loading: status})\n  }\n  \n  cleanBoundingBox = (boolean) => {\n    const boundingBox = document.querySelectorAll('.bounding-box');\n    if (boolean) {\n      if (boundingBox.length > 0) {\n        for (let i = 0; i < boundingBox.length; i++) {\n          boundingBox[i].style.display = 'none';\n        }\n      }\n    } else {\n      if (boundingBox.length > 0) {\n        for (let i = 0; i < boundingBox.length; i++) {\n          boundingBox[i].style.display = 'block';\n        }\n      }\n    }\n  }\n\n  onSubmit = () => {  \n    this.cleanBoundingBox(true)\n    this.isLoading(true)\n    this.reviewErrFetch(false)\n    this.setState({ imageUrl: this.state.input });\n    app.models.predict(\"a403429f2ddf4b49b307e318f00e528b\", this.state.input)\n    .then(response => {\n      this.isLoading(false)\n      this.reviewErrFetch(false)\n      this.cleanBoundingBox(false)\n      return this.displayFaceBox(this.getArrayOfBoxs(response))\n    })\n    .catch(err => {\n      this.cleanBoundingBox(true)\n      this.reviewErrFetch(true)\n      this.isLoading(false)\n      console.log(err);\n    })\n    document.querySelector('.formInput').value = '';\n  }\n\n  changeRoute = (string) => {\n    this.setState({route: string})\n  }\n\n  render() {\n    const { route, imageUrl, errFetch, boxes, loading } = this.state;\n    const { changeRoute, onInputChange, onSubmit } = this;\n    return (\n      <div className=\"App\">\n        <Particles\n          className='particles' \n          params={particlesOption} />\n        <Navigation route={route} changeRoute={changeRoute}/>\n        {\n          (route === 'signin' || route === 'signout' ) &&\n          <SignIn changeRoute={changeRoute}/>\n        }\n        {\n          route === 'register' &&\n          <Register changeRoute={changeRoute}/>\n        }\n        {\n          route === 'logged' &&\n          <>\n          <Rank />\n          <ImageLinkForm onInputChange={onInputChange} onSubmit={onSubmit} />\n          <FaceRecognition inputUrl={imageUrl} errFetch={errFetch} boxes={boxes} loading={loading} />\n          </>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.8ce6e398.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.0def894e.svg\";"],"sourceRoot":""}